name: Build iOS IPA 
  
on:
  push:
    branches:
      - master

env:
  IONIC_CLI_VERSION: 6.20.8
  NODE_VERSION: 19.5.0
  LC_ALL: en_US.UTF-8
  LANG: en_US.UTF-8
  BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
  P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
  BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
  KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}  

jobs:
  build:
    runs-on: macOS-12

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v1
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Install Ionic CLI
      run: |
        npm install -g ionic
        ionic config set -g daemon.updates false
    - name: Install dependencies
      run: npm install npm@9.3.1 -g
      
    - name: Install Capacitor CLI
      run: npm install -g @capacitor/cli@4.4.0
      
    - name: Install Cocoapods
      run: sudo gem install cocoapods

    - name: Cache Pods dependencies
      uses: actions/cache@v1
      with:
          path: ios/Pods
          key: ${{ runner.OS }}-pods-cache-${{ hashFiles('**/ios/Podfile.lock') }}
          restore-keys: |
            ${{ runner.OS }}-pods-cache-
    - name : Install Legacy-peer-deps
      run: sudo npm install react-scripts --legacy-peer-deps 
    
    - name: Build iOS IPA
      run: sudo npm run build-uat
      env: 
       CI: false
    
    - name: Importing settings
      run: 'echo "$conf_file" > project.pbxproj'
      shell: bash
      env:
        conf_file: ${{ secrets.PROJECT_PBXPROJ }}
    
    - name: Capacitor commands   
      run: |
        npx cap add ios
        npx cap sync ios
        npx cap add android
        npm run resources  
        cp $PWD/project.pbxproj $PWD/ios/App/App.xcodeproj/
    
    - name: Install the Apple certificate and provisioning profile 
      run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db
          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $PP_PATH
          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH
          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles  
   
    - name: Archive app
      run: |
          cd ios/App/ && xcodebuild archive \
            -workspace App.xcworkspace \
            -scheme App \
            -destination 'generic/platform=iOS' \
            -archivePath $PWD/build/App.xcarchive         
            
    - name: Export app
      run: |
          xcodebuild \
            -exportArchive \
            -archivePath $PWD/ios/App/build/App.xcarchive \
            -exportPath $PWD/ios/App/build \
            -exportOptionsPlist $PWD/ExportOptions-UAT.plist 
           
    - name: Deploy IPA
      uses: actions/upload-artifact@v2
      with:
        name: App
        path: ios/App/build/App.ipa
